// automatically generated by the FlatBuffers compiler, do not modify

package com.elex.im.test.net.message.flat;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Test1Down extends Table {
  public static Test1Down getRootAsTest1Down(ByteBuffer _bb) { return getRootAsTest1Down(_bb, new Test1Down()); }
  public static Test1Down getRootAsTest1Down(ByteBuffer _bb, Test1Down obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Test1Down __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Test1Bean testBean() { return testBean(new Test1Bean()); }
  public Test1Bean testBean(Test1Bean obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createTest1Down(FlatBufferBuilder builder,
      int testBeanOffset) {
    builder.startObject(1);
    Test1Down.addTestBean(builder, testBeanOffset);
    return Test1Down.endTest1Down(builder);
  }

  public static void startTest1Down(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addTestBean(FlatBufferBuilder builder, int testBeanOffset) { builder.addOffset(0, testBeanOffset, 0); }
  public static int endTest1Down(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

