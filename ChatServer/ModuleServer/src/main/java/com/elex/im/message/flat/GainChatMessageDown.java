// automatically generated by the FlatBuffers compiler, do not modify

package com.elex.im.message.flat;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GainChatMessageDown extends Table {
  public static GainChatMessageDown getRootAsGainChatMessageDown(ByteBuffer _bb) { return getRootAsGainChatMessageDown(_bb, new GainChatMessageDown()); }
  public static GainChatMessageDown getRootAsGainChatMessageDown(ByteBuffer _bb, GainChatMessageDown obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public GainChatMessageDown __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ChatRoomMessageInfo chatRoomMessage(int j) { return chatRoomMessage(new ChatRoomMessageInfo(), j); }
  public ChatRoomMessageInfo chatRoomMessage(ChatRoomMessageInfo obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int chatRoomMessageLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public long sendedTime() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createGainChatMessageDown(FlatBufferBuilder builder,
      int chatRoomMessageOffset,
      long sendedTime) {
    builder.startObject(2);
    GainChatMessageDown.addSendedTime(builder, sendedTime);
    GainChatMessageDown.addChatRoomMessage(builder, chatRoomMessageOffset);
    return GainChatMessageDown.endGainChatMessageDown(builder);
  }

  public static void startGainChatMessageDown(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addChatRoomMessage(FlatBufferBuilder builder, int chatRoomMessageOffset) { builder.addOffset(0, chatRoomMessageOffset, 0); }
  public static int createChatRoomMessageVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startChatRoomMessageVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSendedTime(FlatBufferBuilder builder, long sendedTime) { builder.addLong(1, sendedTime, 0L); }
  public static int endGainChatMessageDown(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

