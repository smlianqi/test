// automatically generated by the FlatBuffers compiler, do not modify

package com.elex.im.message.flat;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class MessageContent extends Table {
  public static MessageContent getRootAsMessageContent(ByteBuffer _bb) { return getRootAsMessageContent(_bb, new MessageContent()); }
  public static MessageContent getRootAsMessageContent(ByteBuffer _bb, MessageContent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public MessageContent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String content() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer contentAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String languageType() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer languageTypeAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }

  public static int createMessageContent(FlatBufferBuilder builder,
      int contentOffset,
      int languageTypeOffset) {
    builder.startObject(2);
    MessageContent.addLanguageType(builder, languageTypeOffset);
    MessageContent.addContent(builder, contentOffset);
    return MessageContent.endMessageContent(builder);
  }

  public static void startMessageContent(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addContent(FlatBufferBuilder builder, int contentOffset) { builder.addOffset(0, contentOffset, 0); }
  public static void addLanguageType(FlatBufferBuilder builder, int languageTypeOffset) { builder.addOffset(1, languageTypeOffset, 0); }
  public static int endMessageContent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

